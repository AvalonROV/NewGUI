import sys
from PyQt4 import QtGui, QtCore
import math

class Example(QtGui.QWidget):
    
    def __init__(self):
        super(Example, self).__init__()
        
        self.initUI()
        
    def initUI(self):
        CalcBtn = QtGui.QPushButton('Calculate')
        CalcBtn.clicked.connect(self.calculate)
        Quit = QtGui.QPushButton('Quit')
        Quit.clicked.connect(QtCore.QCoreApplication.instance().quit)
        
        blank = QtGui.QLabel('')
        TOL = QtGui.QLabel('Take-off Location')
        Heading = QtGui.QLabel('Heading (degrees)')
        AscAS = QtGui.QLabel('Ascent Airspeed (m/s)')
        AscR = QtGui.QLabel('Ascent Rate (m/s)')
        EFTime = QtGui.QLabel('Time of Engine Failure (s)')
        DescAS = QtGui.QLabel('Descent Airspeed (m/s)')
        DescR = QtGui.QLabel('Descent Rate (m/s)')
        WS = QtGui.QLabel('Wind Speed (m/s)')
        WD = QtGui.QLabel('Wind Direction (degrees)')
        AscX = QtGui.QLabel('Ascent DistanceX (m)')
        AscY = QtGui.QLabel('Ascent Distance Y (m)')
        DescX = QtGui.QLabel('Descent Distance X (m)')
        DescY = QtGui.QLabel('Descent Distance Y (m)')        
        WindX = QtGui.QLabel('Wind Distance X (m)')
        WindY = QtGui.QLabel('Wind Distance Y (m)')
        TotalX = QtGui.QLabel('Total Distance X (m)')
        TotalY = QtGui.QLabel('Total Distance Y (m)')        
        Ans = QtGui.QLabel('Location: Distance (m), Direction (Deg)')

        self.TOLEdit = QtGui.QDoubleSpinBox()
        self.HeadingEdit = QtGui.QDoubleSpinBox()
        self.HeadingEdit.setRange(0, 360)
        self.AscASEdit = QtGui.QDoubleSpinBox()
        self.AscREdit = QtGui.QDoubleSpinBox()
        self.EFTimeEdit = QtGui.QDoubleSpinBox()
        self.EFTimeEdit.setRange(0, 1000)
        self.DescASEdit = QtGui.QDoubleSpinBox()
        self.DescREdit = QtGui.QDoubleSpinBox()
        self.WSEdit = QtGui.QDoubleSpinBox()
        self.WDEdit = QtGui.QDoubleSpinBox()
        self.WDEdit.setRange(0, 360)
        self.AscXDisp = QtGui.QDoubleSpinBox()              
        self.AscXDisp.setRange(-10000, 10000)
        self.AscYDisp = QtGui.QDoubleSpinBox()              
        self.AscYDisp.setRange(-10000, 10000)
        self.DescXDisp = QtGui.QDoubleSpinBox()              
        self.DescXDisp.setRange(-10000, 10000)
        self.DescYDisp = QtGui.QDoubleSpinBox()
        self.DescYDisp.setRange(-10000, 10000)
        self.WindXDisp = QtGui.QDoubleSpinBox()
        self.WindXDisp.setRange(-10000, 10000)
        self.WindYDisp = QtGui.QDoubleSpinBox()
        self.WindYDisp.setRange(-10000, 10000)
        self.TotalXDisp = QtGui.QDoubleSpinBox()
        self.TotalXDisp.setRange(-10000, 10000)
        self.TotalYDisp = QtGui.QDoubleSpinBox()
        self.TotalYDisp.setRange(-10000, 10000)
        self.AnsDisplay1 = QtGui.QDoubleSpinBox()
        self.AnsDisplay1.setRange(-10000, 10000)
        self.AnsDisplay2 = QtGui.QDoubleSpinBox()           
        self.AnsDisplay2.setRange(0, 360)

        grid = QtGui.QGridLayout()
        grid.setSpacing(10)

        #grid.addWidget(TOL, 1, 0)
        #grid.addWidget(self.TOLEdit, 1, 1)

        grid.addWidget(Heading, 2, 0)
        grid.addWidget(self.HeadingEdit, 2, 1)
        grid.addWidget(AscAS, 3, 0)
        grid.addWidget(self.AscASEdit, 3, 1)
        grid.addWidget(AscR, 4, 0)
        grid.addWidget(self.AscREdit, 4, 1)
        grid.addWidget(EFTime, 5, 0)
        grid.addWidget(self.EFTimeEdit, 5, 1)
        grid.addWidget(DescAS, 6, 0)
        grid.addWidget(self.DescASEdit, 6, 1)
        grid.addWidget(DescR, 7, 0)
        grid.addWidget(self.DescREdit, 7, 1)
        #grid.addWidget(WS, 8, 0)
        #grid.addWidget(self.WSEdit, 8, 1)
        grid.addWidget(WD, 9, 0)
        grid.addWidget(self.WDEdit, 9, 1)
        grid.addWidget(CalcBtn, 10, 1)
        grid.addWidget(blank, 11, 0)
        grid.addWidget(AscX, 12, 0)        
        grid.addWidget(self.AscXDisp, 12, 1)
        grid.addWidget(AscY, 12, 2)
        grid.addWidget(self.AscYDisp, 12, 3)        
        grid.addWidget(DescX, 13, 0)
        grid.addWidget(self.DescXDisp, 13, 1)
        grid.addWidget(DescY, 13, 2)
        grid.addWidget(self.DescYDisp, 13, 3)
        grid.addWidget(WindX, 14, 0)
        grid.addWidget(self.WindXDisp, 14, 1)
        grid.addWidget(WindY, 14, 2)
        grid.addWidget(self.WindYDisp, 14, 3)
        grid.addWidget(TotalX, 15, 0)
        grid.addWidget(self.TotalXDisp, 15, 1)
        grid.addWidget(TotalY, 15, 2)        
        grid.addWidget(self.TotalYDisp, 15, 3)        
        grid.addWidget(blank, 16, 0)
        grid.addWidget(Ans, 17, 0)
        grid.addWidget(self.AnsDisplay1, 17, 1)
        grid.addWidget(self.AnsDisplay2, 17, 2)
        grid.addWidget(Quit, 18, 3)
        
        self.setLayout(grid) 
        self.setGeometry(300, 200, 700, 300)
        self.setWindowTitle('Search Zone Location')    
        self.show()

    def calculate(self):
        at = self.EFTimeEdit.value()
        h = self.HeadingEdit.value()
        hrad = ((h/180)*math.pi)
        aas = self.AscASEdit.value()
        ar = self.AscREdit.value()
        das = self.DescASEdit.value()
        dr = self.DescREdit.value()
        wd = self.WDEdit.value()
        wdrad = (wd/180)*math.pi
        height = (at*ar)
        dt = (height/dr)
        ax = (at*aas*math.sin(hrad))
        ay = (at*aas*math.cos(hrad))
        dx = (dt*das*math.sin(hrad))
        dy = (dt*das*math.cos(hrad))
        wd = -(-1/720)*dt**3 +25*dt             #incorrect equation, but is close to the correct value
        wx = (wd*math.sin(wdrad))               #more information about wind distance will be released?
        wy = (wd*math.cos(wdrad))
        totalx = (ax + dx + wx)
        totaly = (ay + dy + wy)
        dist = (math.sqrt(totalx**2 +totaly**2))
        angle = ((math.atan(totaly/totalx))*180/math.pi)      #need to account for range of tan, if statements for the quadrants?
        
        self.AscXDisp.setValue(ax)
        self.AscYDisp.setValue(ay)
        self.DescXDisp.setValue(dx)
        self.DescYDisp.setValue(dy)
        self.WindXDisp.setValue(wx)
        self.WindYDisp.setValue(wy)
        self.TotalXDisp.setValue(totalx)
        self.TotalYDisp.setValue(totaly)
        self.AnsDisplay1.setValue(dist)
        self.AnsDisplay2.setValue(angle)        
        
def main():
    
    app = QtGui.QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
